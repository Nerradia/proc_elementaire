reel x0_trace_f;
reel y0_trace_f;
reel x1_trace_f;
reel y1_trace_f;

entier x0_trace;
entier y0_trace;
entier x1_trace;
entier y1_trace;

entier nb_seg;

entier cpt_seg;
entier cpt_add;
entier adresse;

entier base;
entier retour;

base = 524288;

adresse = base;              Vidage de l'écran
tant_que(adresse < 831487)
  ecrire_a (0, adresse);
  adresse = adresse + 1;
fin_tant_que;
ecrire_a (1, 831488);

retour = 1;
tant_que(retour > 0)
  retour = lire_a(831488);
fin_tant_que;

adresse = base;              Vidage de l'écran
tant_que(adresse < 831487)
  ecrire_a (0, adresse);
  adresse = adresse + 1;
fin_tant_que;
ecrire_a (1, 831488);

tant_que(1 < 2)

  retour = 1;
  //attente de disponibilité de l'écran
  tant_que(retour > 0)          
    retour = lire_a(831488);
  fin_tant_que;

  //nombre de points à lire
  cpt_add = 8192;
  nb_seg  = lire_a (cpt_add);
  nb_seg = nb_seg;
  cpt_add = cpt_add + 1;

  cpt_seg = 0;
  ecrire_a (0, 8240);

  //Vidage de l'écran
  adresse = base;
  tant_que(adresse < 831487)
    ecrire_a (0, adresse);
    adresse = adresse + 1;
  fin_tant_que;

  tant_que ( cpt_seg < nb_seg)
    ecrire_a (cpt_add, 8245);
    x0_trace_f = lire_a (cpt_add);
    cpt_add = cpt_add + 1;
    y0_trace_f = lire_a (cpt_add);
    cpt_add = cpt_add + 1;
    x1_trace_f = lire_a (cpt_add);
    cpt_add = cpt_add + 1;
    y1_trace_f = lire_a (cpt_add);
    cpt_add = cpt_add + 1;

    x0_trace = rve(x0_trace_f);
    y0_trace = rve(y0_trace_f);
    x1_trace = rve(x1_trace_f);
    y1_trace = rve(y1_trace_f);

    //traçage des segments
    adresse = 640 * y0_trace;
    adresse = adresse + x0_trace;
    adresse = adresse + base;
    ecrire_a (15, adresse);

    adresse = 640 * y1_trace;
    adresse = adresse + x1_trace;
    adresse = adresse + base;
    ecrire_a (15, adresse);
    cpt_seg = cpt_seg + 1;
  //fin parcours segments
  fin_tant_que;
  //ecriture à l'écran
  ecrire_a (1, 831488);
  //synchro avec le CPU
  ecrire_a (0, 8240);

//fin boucle infinie
fin_tant_que 